<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.companioncar.backstage.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.companioncar.backstage.model.Role" >
    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_code, is_delete, create_time, update_time
  </sql>
  <insert id="insertBatch">
    insert into authority_role(authority_id, role_id) values
    <foreach collection="list" item="item" separator=",">
      (
        #{item.authorityId},#{item.roleId}
      )
    </foreach>
  </insert>
  <insert id="roleInit" parameterType="com.companioncar.backstage.model.Role">
    insert into role(role_id, role_name, role_code, is_delete, create_time, update_time )
    values(#{roleId,jdbcType=VARCHAR},#{roleName,jdbcType=VARCHAR},#{roleCode,jdbcType=VARCHAR},
    #{isDelete,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},#{createTime,jdbcType=TIMESTAMP})
  </insert>
  <select id="findByRoleCode" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from role
    where role_code = #{roleCode,jdbcType=VARCHAR}
  </select>
  <select id="isHasAuthority" resultType="java.lang.Integer" parameterType="com.companioncar.backstage.model.AuthorityAndRole">
    select count(*)
    from authority_role
    where authority_id = #{authorityId,jdbcType=VARCHAR} and role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <insert id="addAuthority" parameterType="com.companioncar.backstage.model.AuthorityAndRole">
    insert into authority_role(authority_id, role_id)
    values(#{authorityId,jdbcType=VARCHAR},#{roleId,jdbcType=VARCHAR})
  </insert>
  <select id="list" parameterType="com.companioncar.backstage.model.Role" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from role
    <where>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR}
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleCode != null" >
        role_code = #{roleCode,jdbcType=VARCHAR}
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT}
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.companioncar.backstage.model.Role" >
    insert into role (role_id, role_name, role_code,
      is_delete, create_time, update_time)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT},
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.companioncar.backstage.model.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleCode != null" >
        role_code,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.companioncar.backstage.model.Role" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.companioncar.backstage.model.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>